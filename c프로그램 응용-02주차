#include <stdio.h>

// 상품의 최대 개수 정의
#define MAX_PRODUCTS 100

int main() {
    int num_products;            // 상품 종류 수
    int stock[MAX_PRODUCTS];     // 각 상품의 재고 수량
    int sales[MAX_PRODUCTS];     // 각 상품의 당일 판매 수량
    int product_id;              // 상품 ID
    int total_stock = 0;         // 전체 재고 수량

    // 1. 상품의 종류를 입력받음 (1~100)
    printf("상품 종류를 입력하세요 (1~100): ");
    scanf("%d", &num_products);

    if (num_products < 1 || num_products > MAX_PRODUCTS) {
        printf("상품 종류는 1에서 100 사이여야 합니다.\n");
        return 1;
    }

    // 2. 각 상품의 입고 수량을 입력받음
    for (int i = 0; i < num_products; i++) {
        printf("상품 ID %d의 입고 수량을 입력하세요: ", i + 1);
        scanf("%d", &stock[i]);
    }

    // 3. 당일 판매 수량을 입력받음
    for (int i = 0; i < num_products; i++) {
        printf("상품 ID %d의 당일 판매 수량을 입력하세요: ", i + 1);
        scanf("%d", &sales[i]);
        stock[i] -= sales[i]; // 재고에서 판매된 수량을 차감
    }

    // 4. 특정 상품 ID의 재고 수량 조회
    printf("재고를 조회할 상품 ID를 입력하세요: ");
    scanf("%d", &product_id);

    if (product_id < 1 || product_id > num_products) {
        printf("유효하지 않은 상품 ID입니다.\n");
        return 1;
    }

    // 해당 상품의 재고 수량 출력
    printf("상품 ID %d의 재고 수량: %d\n", product_id, stock[product_id - 1]);

    // 5. 전체 재고 수량 계산 및 출력
    for (int i = 0; i < num_products; i++) {
        total_stock += stock[i];
    }
    printf("전체 재고 수량: %d\n", total_stock);

    return 0;
}
